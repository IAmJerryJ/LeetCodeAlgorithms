//Java
/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
       List<List<Integer>> res = new ArrayList<>();
       Deque<Node> queue = new ArrayDeque<>();

       if(root == null){
           return res;
       }

       queue.addLast(root);
       while(!queue.isEmpty()){
           int size = queue.size();
           List<Integer> path = new ArrayList<>();
           for(int i = 0; i < size; i++){
               Node cur = queue.removeFirst();
               path.add(cur.val);
               for(Node child : cur.children){
                   queue.addLast(child);
               }
           }
           res.add(path);
       }
       return res;
    }
}

//Time: 3 ms, Beat 75.11% users
//Memory: 42.4 MB, Beat 30.73% users
